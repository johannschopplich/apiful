// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`OpenAPI Adapter > generates OpenAPI types 1`] = `
"/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck

declare module 'apiful/schema' {
  import { paths as SampleApiPaths } from 'apiful/__sampleApi__'

  interface OpenAPISchemaRepository {
    sampleApi: SampleApiPaths
  }
}

declare module 'apiful/__sampleApi__' {
  export interface paths {
      "/foo/1": {
          parameters: {
              query?: never;
              header?: never;
              path?: never;
              cookie?: never;
          };
          /** Get static foo object with value "1" */
          get: {
              parameters: {
                  query?: never;
                  header?: never;
                  path?: never;
                  cookie?: never;
              };
              requestBody?: never;
              responses: {
                  /** @description A foo object with value "1" */
                  200: {
                      headers: {
                          [name: string]: unknown;
                      };
                      content: {
                          "application/json": {
                              /** @example 1 */
                              foo?: string;
                          };
                      };
                  };
              };
          };
          put?: never;
          post?: never;
          delete?: never;
          options?: never;
          head?: never;
          patch?: never;
          trace?: never;
      };
      "/foo": {
          parameters: {
              query?: never;
              header?: never;
              path?: never;
              cookie?: never;
          };
          /** Get static foo object with value "bar" */
          get: {
              parameters: {
                  query?: never;
                  header?: never;
                  path?: never;
                  cookie?: never;
              };
              requestBody?: never;
              responses: {
                  /** @description A foo object with value "bar" */
                  200: {
                      headers: {
                          [name: string]: unknown;
                      };
                      content: {
                          "application/json": {
                              /** @example bar */
                              foo?: string;
                          };
                      };
                  };
              };
          };
          put?: never;
          post?: never;
          delete?: never;
          options?: never;
          head?: never;
          patch?: never;
          trace?: never;
      };
      "/bar": {
          parameters: {
              query?: never;
              header?: never;
              path?: never;
              cookie?: never;
          };
          get?: never;
          put?: never;
          /** Post request details */
          post: {
              parameters: {
                  query?: never;
                  header?: never;
                  path?: never;
                  cookie?: never;
              };
              requestBody: {
                  content: {
                      "application/json": {
                          [key: string]: unknown;
                      };
                  };
              };
              responses: {
                  /** @description An object containing the request details */
                  200: {
                      headers: {
                          [name: string]: unknown;
                      };
                      content: {
                          "application/json": {
                              /** @example /bar */
                              url?: string;
                              /** @example request body */
                              body?: string;
                              headers?: {
                                  [key: string]: string;
                              };
                              /** @example POST */
                              method?: string;
                          };
                      };
                  };
              };
          };
          delete?: never;
          options?: never;
          head?: never;
          patch?: never;
          trace?: never;
      };
      "/params": {
          parameters: {
              query?: never;
              header?: never;
              path?: never;
              cookie?: never;
          };
          /** Get query parameters */
          get: {
              parameters: {
                  query?: never;
                  header?: never;
                  path?: never;
                  cookie?: never;
              };
              requestBody?: never;
              responses: {
                  /** @description An object containing the query parameters */
                  200: {
                      headers: {
                          [name: string]: unknown;
                      };
                      content: {
                          "application/json": {
                              [key: string]: string;
                          };
                      };
                  };
              };
          };
          put?: never;
          post?: never;
          delete?: never;
          options?: never;
          head?: never;
          patch?: never;
          trace?: never;
      };
  }
  export type webhooks = Record<string, never>;
  export interface components {
      schemas: never;
      responses: never;
      parameters: never;
      requestBodies: never;
      headers: never;
      pathItems: never;
  }
  export type $defs = Record<string, never>;
  export type operations = Record<string, never>;
}
"
`;
