// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`OpenAPI to TypeScript > generates OpenAPI types 1`] = `
"/* eslint-disable */
/* prettier-ignore */

declare module 'apiful/schema' {
  import { paths as TestEchoPaths, operations as TestEchoOperations } from 'apiful/__testEcho__'

  interface OpenAPISchemaRepository {
    testEcho: TestEchoPaths
  }

  export type TestEchoResponse<
    T extends keyof TestEchoOperations,
    R extends keyof TestEchoOperations[T]['responses'] = 200 extends keyof TestEchoOperations[T]['responses'] ? 200 : never
  > = TestEchoOperations[T]['responses'][R] extends { content: { 'application/json': infer U } } ? U : never
  export type TestEchoRequestBody<
    T extends keyof TestEchoOperations
  > = TestEchoOperations[T]['requestBody'] extends { content: { 'application/json': infer U } } ? U : never
  export type TestEchoRequestQuery<
    T extends keyof TestEchoOperations
  > = TestEchoOperations[T]['parameters'] extends { query?: infer U } ? U : never
}

declare module 'apiful/__testEcho__' {
  export type paths = Record<string, never>
  export type webhooks = Record<string, never>
  export interface components {
    schemas: never
    responses: never
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
  }
  export type $defs = Record<string, never>
  export type operations = Record<string, never>
}
"
`;
